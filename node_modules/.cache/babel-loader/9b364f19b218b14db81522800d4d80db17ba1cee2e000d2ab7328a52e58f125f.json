{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Juan\\\\Desktop\\\\Transacciones\\\\transacciones-web\\\\src\\\\context\\\\user.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\nexport function UserProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  // Obtener el usuario almacenado en el localStorage al montar el componente\n  const [usuario, setUsuario] = useState(() => {\n    const storedUser = window.localStorage.getItem(\"usuario\");\n    return storedUser ? JSON.parse(storedUser) : \"\"; // Parsear si es un objeto\n  });\n\n  // Actualizar el localStorage cada vez que el usuario cambie\n  useEffect(() => {\n    // Convertir a cadena JSON si es un objeto\n    const userString = JSON.stringify(usuario);\n    localStorage.setItem(\"usuario\", userString);\n    console.log(window.localStorage.getItem(\"usuario\"));\n  }, [usuario]);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      usuario,\n      setUsuario\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(UserProvider, \"nxB5spY69o0MRY7AIkzdGnot36E=\");\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","jsxDEV","_jsxDEV","UserContext","UserProvider","_ref","_s","children","usuario","setUsuario","storedUser","window","localStorage","getItem","JSON","parse","userString","stringify","setItem","console","log","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Juan/Desktop/Transacciones/transacciones-web/src/context/user.jsx"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\r\n\r\nexport const UserContext = createContext();\r\n\r\nexport function UserProvider({ children }) {\r\n  // Obtener el usuario almacenado en el localStorage al montar el componente\r\n  const [usuario, setUsuario] = useState(() => {\r\n    const storedUser = window.localStorage.getItem(\"usuario\");\r\n    return storedUser ? JSON.parse(storedUser) : \"\"; // Parsear si es un objeto\r\n  });\r\n\r\n  // Actualizar el localStorage cada vez que el usuario cambie\r\n  useEffect(() => {\r\n    // Convertir a cadena JSON si es un objeto\r\n    const userString = JSON.stringify(usuario)\r\n    localStorage.setItem(\"usuario\", userString);\r\n    console.log(window.localStorage.getItem(\"usuario\"));\r\n  }, [usuario]);\r\n\r\n  return (\r\n    <UserContext.Provider value={{ usuario, setUsuario }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,OAAO,SAASM,YAAYA,CAAAC,IAAA,EAAe;EAAAC,EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACvC;EACA,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,MAAM;IAC3C,MAAMW,UAAU,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;IACzD,OAAOH,UAAU,GAAGI,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC,GAAG,EAAE,CAAC,CAAC;EACnD,CAAC,CAAC;;EAEF;EACAV,SAAS,CAAC,MAAM;IACd;IACA,MAAMgB,UAAU,GAAGF,IAAI,CAACG,SAAS,CAACT,OAAO,CAAC;IAC1CI,YAAY,CAACM,OAAO,CAAC,SAAS,EAAEF,UAAU,CAAC;IAC3CG,OAAO,CAACC,GAAG,CAACT,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC;EACrD,CAAC,EAAE,CAACL,OAAO,CAAC,CAAC;EAEb,oBACEN,OAAA,CAACC,WAAW,CAACkB,QAAQ;IAACC,KAAK,EAAE;MAAEd,OAAO;MAAEC;IAAW,CAAE;IAAAF,QAAA,EAClDA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAACpB,EAAA,CApBeF,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}