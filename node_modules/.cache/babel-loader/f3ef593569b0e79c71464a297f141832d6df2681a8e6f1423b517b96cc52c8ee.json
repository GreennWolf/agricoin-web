{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Juan\\\\Desktop\\\\Transacciones\\\\transacciones-web\\\\src\\\\components\\\\Transacciones.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { TableRow } from \"./TableRow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Transacciones(_ref) {\n  _s();\n  let {\n    socket,\n    formatearFecha,\n    transacciones,\n    sectores,\n    usuarios,\n    productos\n  } = _ref;\n  const [selected, setSelected] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 14; // Definir la cantidad de elementos por página\n\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = transacciones.slice(indexOfFirstItem, indexOfLastItem);\n  function Autorizar() {\n    if (selected != null && selected != '' && selected != undefined) {\n      const transaccion = transacciones.find(transaccion => transaccion.idtransaccion_pen == selected);\n      socket.emit('autorizarPen', transaccion);\n    } else {\n      alert('Selecciona una Transaccion');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"titulo\",\n      children: \"Transacciones\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table-conversiones\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID Transacci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Usuario\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sector Origen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sector Destino\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Producto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Cantidad\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Fecha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: currentItems.reverse().map(tran => {\n          const user = usuarios.find(user => user.idusuario == tran.idusuario);\n          const sectorO = sectores.find(sector => sector.idsector == tran.idsector_o);\n          const sectorD = sectores.find(sector => sector.idsector == tran.idsector_d);\n          const producto = productos.find(producto => producto.idproducto == tran.idproducto);\n          const cantidad = tran.cantidad;\n          const fecha = formatearFecha(tran.fecha);\n          return /*#__PURE__*/_jsxDEV(TableRow, {\n            // Cambiar la clave única si es necesario\n            tran: tran,\n            user: user,\n            sectorO: sectorO,\n            sectorD: sectorD,\n            producto: producto,\n            cantidad: cantidad,\n            fecha: fecha,\n            selected: selected,\n            setSelected: setSelected\n          }, tran.idtransaccion, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(currentPage - 1),\n        disabled: currentPage === 1,\n        children: \"Anterior\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination-info\",\n        children: [\"P\\xE1gina \", currentPage, \" de \", Math.ceil(transacciones.length / itemsPerPage)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(currentPage + 1),\n        disabled: indexOfLastItem >= transacciones.length,\n        children: \"Siguiente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(Transacciones, \"DCEwNApqLA+Ij/rRagtXS7cyLpc=\");\n_c = Transacciones;\nvar _c;\n$RefreshReg$(_c, \"Transacciones\");","map":{"version":3,"names":["React","useState","TableRow","jsxDEV","_jsxDEV","Transacciones","_ref","_s","socket","formatearFecha","transacciones","sectores","usuarios","productos","selected","setSelected","currentPage","setCurrentPage","itemsPerPage","indexOfLastItem","indexOfFirstItem","currentItems","slice","Autorizar","undefined","transaccion","find","idtransaccion_pen","emit","alert","children","className","fileName","_jsxFileName","lineNumber","columnNumber","reverse","map","tran","user","idusuario","sectorO","sector","idsector","idsector_o","sectorD","idsector_d","producto","idproducto","cantidad","fecha","idtransaccion","onClick","disabled","Math","ceil","length","_c","$RefreshReg$"],"sources":["C:/Users/Juan/Desktop/Transacciones/transacciones-web/src/components/Transacciones.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { TableRow } from \"./TableRow\";\r\n\r\nexport function Transacciones({ socket,formatearFecha, transacciones, sectores, usuarios, productos }) {\r\n  const [selected, setSelected] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const itemsPerPage = 14; // Definir la cantidad de elementos por página\r\n\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentItems = transacciones.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n  function Autorizar() {\r\n    if (selected != null && selected != '' && selected != undefined) {\r\n      const transaccion = transacciones.find(transaccion => transaccion.idtransaccion_pen == selected);\r\n      socket.emit('autorizarPen', transaccion);\r\n    } else {\r\n      alert('Selecciona una Transaccion');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <h1 className=\"titulo\">Transacciones</h1>\r\n      <table className=\"table-conversiones\">\r\n        <thead>\r\n          <tr>\r\n            <th>ID Transacción</th>\r\n            <th>Usuario</th>\r\n            <th>Sector Origen</th>\r\n            <th>Sector Destino</th>\r\n            <th>Producto</th>\r\n            <th>Cantidad</th>\r\n            <th>Fecha</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {currentItems.reverse().map(tran => {\r\n            const user = usuarios.find(user => user.idusuario == tran.idusuario);\r\n            const sectorO = sectores.find(sector => sector.idsector == tran.idsector_o);\r\n            const sectorD = sectores.find(sector => sector.idsector == tran.idsector_d);\r\n            const producto = productos.find(producto => producto.idproducto == tran.idproducto);\r\n            const cantidad = tran.cantidad;\r\n            const fecha = formatearFecha(tran.fecha)\r\n            return (\r\n              <TableRow\r\n                key={tran.idtransaccion} // Cambiar la clave única si es necesario\r\n                tran={tran}\r\n                user={user}\r\n                sectorO={sectorO}\r\n                sectorD={sectorD}\r\n                producto={producto}\r\n                cantidad={cantidad}\r\n                fecha={fecha}\r\n                selected={selected}\r\n                setSelected={setSelected}\r\n              />\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"pagination\">\r\n        <button\r\n          onClick={() => setCurrentPage(currentPage - 1)}\r\n          disabled={currentPage === 1}\r\n        >\r\n          Anterior\r\n        </button>\r\n        <div className=\"pagination-info\">\r\n          Página {currentPage} de {Math.ceil(transacciones.length / itemsPerPage)}\r\n        </div>\r\n        <button\r\n          onClick={() => setCurrentPage(currentPage + 1)}\r\n          disabled={indexOfLastItem >= transacciones.length}\r\n        >\r\n          Siguiente\r\n        </button>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}